# Example workflow for developers (latest version)
name: Issue Solver - Development

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  issues:
    types: [opened, labeled]
  issue_comment:
    types: [created]

jobs:
  test-issue-solver:
    if: |
      (github.event_name == 'issues' && (
        contains(github.event.issue.labels.*.name, 'test-solve') ||
        contains(github.event.issue.body, '@gemini') ||
        contains(github.event.issue.body, '@gemini-pro') ||
        contains(github.event.issue.body, '@gemini-flash') ||
        contains(github.event.issue.body, '@gpt') ||
        contains(github.event.issue.body, '@gpt-o3') ||
        contains(github.event.issue.body, '@GPT') ||
        contains(github.event.issue.body, '@GEMINI')
      )) ||
      (github.event_name == 'issue_comment' && (
        contains(github.event.comment.body, '@gemini') ||
        contains(github.event.comment.body, '@gemini-pro') ||
        contains(github.event.comment.body, '@gemini-flash') ||
        contains(github.event.comment.body, '@gpt') ||
        contains(github.event.comment.body, '@gpt-o3') ||
        contains(github.event.comment.body, '@GPT') ||
        contains(github.event.comment.body, '@GEMINI')
      ))
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: write
    
    steps:
      - name: Debug Event Information
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            echo "Issue number: ${{ github.event.comment.issue.number }}"
            echo "Comment body: ${{ github.event.comment.body }}"
            echo "Comment author: ${{ github.event.comment.user.login }}"
          elif [ "${{ github.event_name }}" = "issues" ]; then
            echo "Issue number: ${{ github.event.issue.number }}"
            echo "Issue body: ${{ github.event.issue.body }}"
          fi
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          
          # Validate issue number is available for issue-related events
          if [ "${{ github.event_name }}" = "issue_comment" ] || [ "${{ github.event_name }}" = "issues" ]; then
            ISSUE_NUM="${{ github.event_name == 'issue_comment' && github.event.comment.issue.number || github.event.issue.number }}"
            if [ -z "$ISSUE_NUM" ]; then
              echo "ERROR: No issue number found for this event"
              exit 1
            fi
            echo "Using issue number: $ISSUE_NUM"
          else
            echo "Non-issue event - using test issue number: 1"
          fi
    
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Test Issue Solver with Latest Version
        uses: el-el-san/issue-solver@main  # Latest development version
        with:
          issue-number: ${{ (github.event_name == 'issue_comment' && github.event.comment.issue.number) || (github.event_name == 'issues' && github.event.issue.number) || '1' }}
          gemini-api-key: ${{ secrets.GEMINI_API_KEY }}
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          safety-mode: 'normal'
          dry-run: 'false'  # Enable actual file generation for testing
          enable-review: 'false'
          run-tests: 'true'
          run-linter: 'true'
          strict-mode: 'false'
          force-implementation: 'true'