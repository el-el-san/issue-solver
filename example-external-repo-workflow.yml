# .github/workflows/issue-solver.yml
# Issue Solver for External Repository
# 
# 別リポジトリで使用する際の設定例
# このファイルを使用するリポジトリの .github/workflows/ ディレクトリに配置してください

name: Issue Solver

on:
  issues:
    types: [opened, labeled]
  issue_comment:
    types: [created]

jobs:
  solve-issue:
    # トリガー条件：
    # 1. issueにtest-solveラベルが付いている
    # 2. issue本文またはコメントに@geminiまたは@gptが含まれている
    if: |
      (github.event_name == 'issues' && (
        contains(github.event.issue.labels.*.name, 'test-solve') ||
        contains(github.event.issue.body, '@gemini') ||
        contains(github.event.issue.body, '@gpt') ||
        contains(github.event.issue.body, '@GPT') ||
        contains(github.event.issue.body, '@GEMINI')
      )) ||
      (github.event_name == 'issue_comment' && (
        contains(github.event.comment.body, '@gemini') ||
        contains(github.event.comment.body, '@gpt') ||
        contains(github.event.comment.body, '@GPT') ||
        contains(github.event.comment.body, '@GEMINI')
      ))
    runs-on: ubuntu-latest
    
    permissions:
      contents: write      # リポジトリへの書き込み権限
      issues: write        # Issueへのコメント権限
      pull-requests: write # PR作成権限（オプション）
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Run Issue Solver
        uses: el-el-san/issue-solver@main  # または特定のバージョン (例: v1.0.0)
        with:
          # 必須パラメータ
          issue-number: ${{ github.event.issue.number || github.event.issue.number }}
          gemini-api-key: ${{ secrets.GEMINI_API_KEY }}  # Geminiを使用する場合
          # openai-api-key: ${{ secrets.OPENAI_API_KEY }}  # OpenAIを使用する場合
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
          # オプションパラメータ（デフォルト値を使用する場合は省略可能）
          safety-mode: 'normal'      # 'strict', 'normal', 'relaxed'
          dry-run: 'false'           # 'true'にするとファイルを変更しない
          enable-review: 'false'     # 'true'にすると変更前にレビューを要求
          run-tests: 'true'          # テストを実行するかどうか
          run-linter: 'false'        # リンターを実行するかどうか
          strict-mode: 'false'       # 厳密モード（エラー時に停止）
          force-implementation: 'true' # 低信頼度でも実装を強制
          
          # AIプロバイダーとモデルの設定
          # ai-provider: 'gemini'    # 'gemini'または'openai'（デフォルト: 自動検出）
          # gemini-model: 'gemini-2.5-flash-preview-05-20'  # 使用するGeminiモデル
          # openai-model: 'gpt-4o-mini'  # 使用するOpenAIモデル